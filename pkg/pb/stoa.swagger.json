{
  "swagger": "2.0",
  "info": {
    "title": "stoa.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/storage/dictionary/delete/{entity_name}/{key}": {
      "post": {
        "summary": "DictionaryRemove removes from the Dictionary the key-value pair specified\nby the Key.",
        "operationId": "Stoa_DictionaryRemove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Result"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/dictionary/clear/{entity_name}": {
      "post": {
        "summary": "DictionaryClear clears the Dictionary.",
        "operationId": "Stoa_DictionaryClear",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/dictionary/get/{entity_name}/{key}": {
      "get": {
        "summary": "DictionaryGet returns from the Dictionary the Value specified by the Key.",
        "operationId": "Stoa_DictionaryGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/dictionary/put/{entity_name}": {
      "post": {
        "summary": "DictionaryPut puts into the Dictionary the KeyValue and returns the old\nValue.",
        "operationId": "Stoa_DictionaryPut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1KeyValue"
            }
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/dictionary/putIfAbsent/{entity_name}": {
      "post": {
        "summary": "DictionaryPutIfAbsent puts into the Dictionary the KeyValue if the key is\nnot present.",
        "operationId": "Stoa_DictionaryPutIfAbsent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Result"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1KeyValue"
            }
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/dictionary/range/{entity_name}": {
      "get": {
        "summary": "DictionaryRange returns from the Dictionary all the key-value pairs.",
        "operationId": "Stoa_DictionaryRange",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1KeyValue"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1KeyValue"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/dictionary/size/{entity_name}": {
      "get": {
        "summary": "DictionarySize returns size of the Dictionary.",
        "operationId": "Stoa_DictionarySize",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/mutex/trylock/{entity_name}": {
      "post": {
        "summary": "MutexTryLock tries to lock the Mutex.",
        "operationId": "Stoa_MutexTryLock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Result"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ClientId"
            }
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/mutex/unlock/{entity_name}": {
      "post": {
        "summary": "MutexUnlock unlocks the Mutex.",
        "operationId": "Stoa_MutexUnlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Result"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ClientId"
            }
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/queue/clear/{entity_name}": {
      "post": {
        "summary": "QueueClear cleares the Queue.",
        "operationId": "Stoa_QueueClear",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/queue/offer/{entity_name}": {
      "post": {
        "summary": "QueueOffer offers the Value to the Queue.",
        "operationId": "Stoa_QueueOffer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Result"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/queue/peek/{entity_name}": {
      "get": {
        "summary": "QueuePeek returns the head of the Queue.",
        "operationId": "Stoa_QueuePeek",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/queue/poll/{entity_name}": {
      "get": {
        "summary": "QueuePoll removes and returns the head of the Queue.",
        "operationId": "Stoa_QueuePoll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/queue/size/{entity_name}": {
      "get": {
        "summary": "QueueSize returns size of the Queue.",
        "operationId": "Stoa_QueueSize",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Value"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    },
    "/v1/service/ping/{entity_name}": {
      "post": {
        "summary": "Ping pings the Cluster.",
        "operationId": "Stoa_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stoa"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ClientId": {
      "type": "object",
      "properties": {
        "entity_name": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "byte"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "ClientId contains Client ID."
    },
    "v1Empty": {
      "type": "object",
      "description": "Empty contains no data."
    },
    "v1KeyValue": {
      "type": "object",
      "properties": {
        "entity_name": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "KeyValue contains Dictionary key-value pair."
    },
    "v1Result": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Result contains an operation result."
    },
    "v1Value": {
      "type": "object",
      "properties": {
        "entity_name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Value contains an arbitrary data."
    }
  }
}
